Panic Soft
#NoFreeOnExit TRUE

define ROOT     C:\Program Files\nxlog
define CERTDIR  %ROOT%\cert
define CONFDIR  %ROOT%\conf
define LOGDIR   %ROOT%\data
define LOGFILE  %LOGDIR%\nxlog.log
LogFile %LOGFILE%

Moduledir %ROOT%\modules
CacheDir  %ROOT%\data
Pidfile   %ROOT%\data\nxlog.pid
SpoolDir  %ROOT%\data

<Extension _syslog>
    Module      xm_syslog
</Extension>

<Extension _charconv>
    Module      xm_charconv
    AutodetectCharsets iso8859-2, utf-8, utf-16, utf-32
</Extension>

<Extension _exec>
    Module      xm_exec
</Extension>

<Extension _fileop>
    Module      xm_fileop

    # Check the size of our log file hourly, rotate if larger than 5MB
    <Schedule>
        Every   1 hour
        Exec    if (file_exists('%LOGFILE%') and \
                   (file_size('%LOGFILE%') >= 5M)) \
                    file_cycle('%LOGFILE%', 8);
    </Schedule>

    # Rotate our log file every week on Sunday at midnight
    <Schedule>
        When    @weekly
        Exec    if file_exists('%LOGFILE%') file_cycle('%LOGFILE%', 8);
    </Schedule>
</Extension>

<Input in>
	Module im_msvistalog
	ReadFromLast TRUE
	SavePos TRUE

	# Selección de eventos a enviar según PDF de N-Reporter
	# http://www.npartnertech.com/download/tech/%20N-Reporter-Windows-File-Server-auditTosyslog_en.pdf
	<QueryXML>
		<QueryList>
			<Query Id="0">
				<Select Path="Application">*[System[Provider[@Name='MsiInstaller']]]</Select>
			</Query>
			<Query Id="1" Path="Microsoft-Windows-Sysmon/Operational">
				<Select Path="Microsoft-Windows-Sysmon/Operational">*[System[Provider[@Name='Microsoft-Windows-Sysmon']]]</Select>
			</Query>
		</QueryList>
	</QueryXML>
	
	# Convertimos el nombre que se envía a nombre de host corto (sin el dominio)
	Exec $Hostname = hostname();
</Input>

<Output out>
	Module om_udp
	# Cambiar por la IP con la dirección del Ubuntu con el Syslog remoto activado
	Host 10.0.20.133
	Port 514
	<Exec>
		$Message = string($Channel) + " - EventID " + string($EventID) + " - " + $Message;

		# Traducción Windows -> Syslog
		# https://en.wikipedia.org/wiki/Syslog
		
		# HardwareEvents == kern (0)
		# System == uucp (8)
		# Security == news (7)
		# Otros == local1 (17)
		
		if ($Channel == "Security") { $SyslogFacilityValue = 7; }
			else if ($Channel == "System") { $SyslogFacilityValue = 8; }
			else if ($Channel == "HardwareEvents") { $SyslogFacilityValue = 0; }
			else { $SyslogFacilityValue = 17; }

		# Error = 3 (Error conditions)
		# Warning = 4 (May indicate that an error will occur if action is not taken)
		# Notice = 5 (Events that are unusual, but not error conditions)
		
		if ($EventType == 'ERROR' or $EventType == 'AUDIT_FAILURE') { $SyslogSeverityValue = 3; }
			else if ($EventType == 'WARNING') { $SyslogSeverityValue = 4; }
			else if ($EventType == 'INFO' or $EventType == 'AUDIT_SUCCESS') { $SyslogSeverityValue = 5; }

		# https://www.alienvault.com/documentation/usm-v5/plugin-management/supported-plugins/configuring-nxlog.htm
		# Replace newlines, tabs and carriage returns with blanks:
		$Message = replace($Message, "\t", " "); $Message = replace($Message, "\n", " "); $Message = replace($Message, "\r", " ");

		# Ensure that commonly undefined values are set:
		if not defined $AccountName { $AccountName = "-"; }
		if not defined $AccountType { $AccountType = "-"; }
		if not defined $Domain { $Domain = "-"; }			

		to_syslog_bsd();
	</Exec>
</Output>

<Route 1>
    Path        in => out
</Route>